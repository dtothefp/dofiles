# Ring the bell if any background window rang a bell
#set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Mouse
set -g mouse on

# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# This is hilariously absurd.  How many nerds use tmux on OS X every day and
# it's still fundamentally broken?
set -g default-command "reattach-to-user-namespace -l zsh"

# Patch for OS X pbpaste and pbcopy under tmux.-- this may not be necessary with tmux yank plugin installed
set-option -g default-command "reattach-to-user-namespace -l zsh"

# use ZSH
set -g default-shell /bin/zsh

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# Create splits and vertical splits - YADR config - I wish I knew what ^ was???
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Renumber the windows
bind R run "renum_tmux > /dev/null 2>&1"

# Saner splitting.
#bind v split-window -h
#bind s split-window -v
bind S choose-session

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r C-h resize-pane -L 10
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r C-l resize-pane -R 10

# DVTM style pane selection
bind 1 select-pane -t 1
bind 2 select-pane -t 2
bind 3 select-pane -t 3
bind 4 select-pane -t 4
bind 5 select-pane -t 5
bind 6 select-pane -t 6
bind 7 select-pane -t 7
bind 8 select-pane -t 8
bind 9 select-pane -t 9

# quick pane cycling -- again wish I knew what ^ did, binding from http://robots.thoughtbot.com/a-tmux-crash-course
unbind ^A
bind ^A select-pane -t :.+

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state=,tty=,comm= | grep -iqE '^[^TXZ ]+ +#{s|/dev/||:pane_tty}\s+(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

#######Use below if using vim powerline######
set -g status-left-length 52
set -g status-right-length 451
set -g status-style fg=white,bg=colour234
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=colour16,bg=colour221,bold

# Custom status bar
# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,colour=238,nobold]'

set -g status-right '#[fg=colour245]⮃ %R ⮃ %d %b #[fg=colour254,bg=colour234,nobold]⮂#[fg=colour16,bg=colour254,bold] #h '

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀ #[fg=colour16,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
###################End here for vim powerline################


# Use something easier to type as the prefix.
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely.
setw -g automatic-rename off

# New windows/pane in $PWD -- YADR config
#bind c new-window -c "#{pane_current_path}"

# Better name management
bind c new-window \; command-prompt "rename-window '%%'"
bind C new-window
bind , command-prompt "rename-window '%%'"

# Use vi keybindings in copy and choice modes -- better perfomance with tmux yank plugin
setw -g mode-keys vi #required to speedup tmux copy cat plugin
bind ` copy-mode #go into vi copy mode
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy
# bind -t vi-copy v begin-selection #without this must use <space> bar to enter visual mode
# bind -t vi-copy y copy-selection

##########Copy and Paste sucks in tmux, I eliminated all this with the tmux yank plugin####
##########Mess around with a combo of these commands
#
#http://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
#https://raw.githubusercontent.com/jordangarcia/dotfilesv2/master/tmux/tmux.conf.symlink
#unbind [
#unbind p
#bind p paste-buffer
# #bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind -t vi-copy Escape cancel -- won't work with tmux copy cat plugin
#bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
# Bind ']' to use pbpaste
#bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
##bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
#
########End Copy Madness ---- thank god!!!!##############################################

# Window movement -- made this like my vim config for tabs shift+l, shift+h
#bind \; last-window -- potentially conflicts with tmux copy cat plugin
bind -r L next-window
bind -r H previous-window

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

#######This is a plugin loader similar to Vundle for VIM######
#God bless this guy https://github.com/tmux-plugins/tpm
# List of plugins
# prefix + I to install the plugins
# prefix + U to update the plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
